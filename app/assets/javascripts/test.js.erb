'use strict'

{
    // #introductionのセレクタ定義
    const start = document.getElementById('start');
    const introduction = document.getElementById('introduction');
    const test = document.getElementById('test');
    
    // #test周りのセレクタ定義
    const p = document.getElementById('question');
    const ans = document.querySelector('#answer > input');
    const btn = document.getElementById('button');
    const result = document.getElementById('result');
    const scoreLabel = document.querySelector('#result > p');
    
    // html内にdata属性として埋め込まれた問題セットを取得して変数に代入
    let cardSet_json = document.getElementById('item_cards').dataset.words_all;
    // cardSet_jsonはjson表記だが、このままではあくまで文字列なのでjson形式として解析してObject型としてcardSetに代入
    let cardSet = JSON.parse(cardSet_json);
    // 解答結果データ送信用として用意されたhidden_fieldタグのセレクタ取得
    const ans_result = document.getElementById('answer_result');
    
    // ここから初期値の設定
    let currentNum = 0;
    let score = 0;
    let ans_list =[];　// 解答結果を保持するための変数
    
    function setQuiz() {
        p.textContent = cardSet[currentNum]["front_word"];
        if(currentNum === cardSet.length - 1) {
             btn.textContent = "ShowScore";
        }
    }
    
    
    // 最初のスタートボタン押したときの処理
    start.addEventListener('click',() => {
        introduction.classList.add('hide');
        test.classList.remove('hide');
        // const radio = document.querySelecter('input[name="quizset"]:checked');
        const radio = document.querySelector('input[name="quizset"]:checked');
        // もし苦手問題のみが選択された場合はcardSetの内容を書き換える
        if (radio.value === "weak" ) {
            cardSet_json = document.getElementById('item_cards').dataset.words_weak;
            cardSet = JSON.parse(cardSet_json);
        }
        
        // 問題の並び替え
        for(let i = cardSet.length-1; i>=1; i--) {
            const randam_num = Math.floor(Math.random()*i);
            [cardSet[randam_num],cardSet[i]] = [cardSet[i],cardSet[randam_num]];
            console.log(randam_num);
            console.log(cardSet);
        }
        // 第一問目をセット
        setQuiz();
    
        
    })
    // Nextボタンを押した時の処理
    btn.addEventListener('click',()=>{
        // 問題が解き終わったらボタン押しても反応しないようにする処理
        if (currentNum >= cardSet.length) {
            return;
        }
        
        if (cardSet[currentNum]["back_word"] === ans.value) { 
            score++;
            // 正解の場合、ans_listの要素にcard_idとresultをキーにしたハッシュを追加
            ans_list.push({id: cardSet[currentNum]["id"], result:1});
        } else {
            // 不正解の場合はresultの値に０を代入
            ans_list.push({id: cardSet[currentNum]["id"],result:0});
        }
        
        ans.value = "";
        
        // 最後の問題出題時は結果を表示
        if (currentNum === cardSet.length - 1) {
            btn.classList.add('disabled');
            scoreLabel.textContent = `Score: ${score}/${cardSet.length}`;
            console.log(ans_list);
            result.classList.add('show');
            // hidden_fieldの値にテスト問題の結果を追加.ただし、結果はjsの配列形式であるため、JSON形式に変換
            ans_result.value = JSON.stringify(ans_list);
        }
        currentNum++;
        setQuiz();
    });
    
    
    
    // jsコード終わり
}